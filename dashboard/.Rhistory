shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
data = read.csv(file = "Bengaluru_House_Data.csv", header = T)
data = read.csv(file = "Bengaluru_House_Data.csv", header = T)
df = data.frame(data)
# Finding missing values and cleaning data frame
df <- replace(df, df=='', NA)
missing_values = colSums(is.na(df))# missing values in each column
df[,c(2,5)] = list(NULL)
df = na.omit(df)
df$BHK <- 0
df$BHK = extract_numeric(df$size)  # using tidyr
df = df[,-3]
df = subset(df, removeNumbers(data$total_sqft) == "")
df$area_sqft = as.numeric(gsub(".*?([0-9]+).*", "\\1", df$total_sqft))
# Importing libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(tm)
library(stringr)
library(corrplot)
library(tidyverse)
data = read.csv(file = "Bengaluru_House_Data.csv", header = T)
df = data.frame(data)
#head(df)
#summary(df)
theme_update(plot.title= element_text(hjust = 0.5, size =10))
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
# Importing libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(tm)
library(stringr)
library(corrplot)
library(tidyverse)
data = read.csv(file = "Bengaluru_House_Data.csv", header = T)
df = data.frame(data)
#head(df)
#summary(df)
theme_update(plot.title= element_text(hjust = 0.5, size =10))
# Finding missing values and cleaning data frame
df <- replace(df, df=='', NA)
missing_values = colSums(is.na(df))# missing values in each column
#missing_values
df[,c(2,5)] = list(NULL)
df = na.omit(df)
# Pre-Processing the data
# create BHK from size column in numeric type
df$BHK <- 0
df$BHK = extract_numeric(df$size)  # using tidyr
df = df[,-3]
# total_sqft column in required format
df = subset(df, removeNumbers(data$total_sqft) == "")
df$area_sqft = as.numeric(gsub(".*?([0-9]+).*", "\\1", df$total_sqft))
df = df[,-3]
df$price_per_sqft = df$price / df$area_sqft
# Removing Outlyers
# delete rows where bath > bhk
df = subset(df, df$bath <= df$BHK)
# delete rows where bhk > 5
df = subset(df, df$BHK <= 5)
# delete rows where area_sqft > 4000
df = subset(df, df$area_sqft <= 4000)
# Reconverting BHK, bath, balcony into catregorical form
df$BHK = as.character(df$BHK)
df$bath = as.character(df$bath)
df$balcony = as.character(df$balcony)
summary(df)
runApp()
runApp()
runApp()
head(df)
summary(df)
str(df)
install.packages("DT")
runApp()
str(df)
runApp()
shiny::runApp()
summary(df)
head(df)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tm)
library(stringr)
library(corrplot)
library(tidyverse)
library(DT)
data = read.csv(file = "Bengaluru_House_Data.csv", header = T)
df = data.frame(data)
# Finding missing values and cleaning data frame
df <- replace(df, df=='', NA)
missing_values = colSums(is.na(df))# missing values in each column
#missing_values
df[,c(2,5)] = list(NULL)
df = na.omit(df)
# Pre-Processing the data
# create BHK from size column in numeric type
df$BHK <- 0
df$BHK = extract_numeric(df$size)  # using tidyr
df = df[,-3]
# total_sqft column in required format
df = subset(df, removeNumbers(data$total_sqft) == "")
df$area_sqft = as.numeric(gsub(".*?([0-9]+).*", "\\1", df$total_sqft))
df = df[,-3]
df$price_per_sqft = df$price / df$area_sqft
# Removing Outlyers
# delete rows where bath > bhk
df = subset(df, df$bath <= df$BHK)
# delete rows where bhk > 5
df = subset(df, df$BHK <= 5)
# delete rows where area_sqft > 4000
df = subset(df, df$area_sqft <= 4000)
# Reconverting BHK, bath, balcony into catregorical form
df$BHK = as.character(df$BHK)
df$bath = as.character(df$bath)
df$balcony = as.character(df$balcony)
summary(df)
runApp()
runApp()
head(data)
runApp()
runApp()
runApp()
runApp()
runApp()
summary(df)
df %>$
df %>% str()
df %>% summary()
runApp()
runApp()
summary(df)
runApp()
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
# Boxplot BHK v/s Price
ggplot(df, aes(x = BHK , y = price,
fill = BHK)) +
theme(legend.position = 'None')+
xlab("BHK")+ ylab("Price (in lacs)") +
geom_boxplot() + stat_boxplot(geom = 'errorbar')+
ggtitle('BHK v/s Price Boxplot')+ ylim(0,500)+
theme(plot.title = element_text(size=50), axis.text =  element_text(size=30), axis.title =  element_text(face='bold',size=40))
# Heatmap of variables
df2 = data.frame(df)
df2$BHK = as.numeric(df2$BHK)
df2$bath = as.numeric(df2$bath)
df2$balcony = as.numeric(df2$balcony)
num_cols = sapply(df2,is.numeric)
num_cols = num_cols[-6]
cor_data = cor(df2[,num_cols])
corrplot(cor_data, method = "color", title = 'Correlation Heatmap', mar=c(0,0,1,0))
length(df[area_type='Super built-up Area',])
length(df[area='Super built-up Area',])
head(df)
length(df[area_type = 'Super built-up  Area',])
length(df[area_type == 'Super built-up  Area',])
length(df)
nrow(df)
nrow(df[df$area_type == 'Super built-up  Area',])
nrow(df[df$area_type == 'Built-up  Area',])
nrow(df[df$area_type == 'Built-up  Area',])
unique(df$area_type)
nrow(df[df$area_type == 'Plot  Area',])
nrow(df[df$area_type == 'Carpet  Area',])
df[df$area_type == 'Carpet  Area',]
a = df[df$area_type == 'Carpet  Area',]
unique(a$location)
freq(a$location)
which.max(a$location)
table(a$location)
sort(table(a$location), decreasing=TRUE)
b = df[df$area_type == 'Built-up  Area',]
c = df[df$area_type == 'Plot  Area',]
d = df[df$area_type == 'Super built-up  Area',])
d = df[df$area_type == 'Super built-up  Area',]
sort(table(b$location), decreasing=TRUE)
sort(table(c$location), decreasing=TRUE)
sort(table(d$location), decreasing=TRUE)
sort(table(a$location), decreasing=TRUE)
a = df[df$area_type == 'Carpet  Area',]
c1 = unique(df$location)
typeof(c1)
c1
sort(table(df$location), decreasing = TRUE)
typeof(sort(table(df$location), decreasing = TRUE))
tab = data.frame(sort(table(df$location), decreasing = TRUE))
tab
newtab = tab[tab$Freq >= 80]
newtab = tab[tab$Freq >= 80,]
newtab
c1 = newtab$Var1
typeof(c1)
c1
as.vector(c1)
c1 = as.vector(newtab$Var1)
typeof(c1)
runApp()
runApp()
runApp()
dftemp = df[df$location == 'Whitefield',]
head(dftemp)
df1= dftemp %>% group_by(BHK) %>% summarise(count=n())
df1$count = df1$count/sum(df1$count)*100
df1$count = round(df1$count, digits = 2)
df1$BHK = factor(df1$BHK,levels= as.character(1:5))
ggplot(df1, aes(x="",y=count, fill=BHK)) +  geom_col()+
geom_text(aes(x=1.56,label= count), size=3, angle = 60,position = position_stack(vjust=0.5))+
coord_polar(theta='y', direction = -1)+theme_void() +ggtitle('Pie Chart of BHK')+ theme(plot.title = element_text(size=15))
runApp()
typeof(c1)
c1
c1[1]
c1[5]
runApp()
c1
runApp()
dftemp = df[df$location == 'Whitefield',]
df1= dftemp %>% group_by(BHK) %>% summarise(count=n())
df1$count = df1$count/sum(df1$count)*100  # percentage
df1$count = round(df1$count, digits = 2)  # roundoff
df1$BHK = factor(df1$BHK,levels= as.character(1:5))
ggplot(df1, aes(x="",y=count, fill=BHK)) +  geom_col()+
geom_text(aes(x=1.56,label= count), size=3, angle = 60,position = position_stack(vjust=0.5))+
coord_polar(theta='y', direction = -1)+theme_void() +ggtitle('Pie Chart of BHK')+ theme(plot.title = element_text(size=15))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp('C:/Users/sanja/Downloads/Visualisation_project-main/envi_imp')
?fluidRow
shiny::runApp()
runApp()
runApp('aaa')
runApp('abhsv')
runApp()
runApp('abhsv')
runApp()
column(df)
runApp()
data.frame(sort(table(df[df$location == 'Whitefield',]$area_type), decreasing = TRUE))
shiny::runApp()
